participant "s : Settler" as s
participant "rcp : TeleportRecipe" as rcp
participant "m : Material" as m
participant "inv : Inventory" as inv
participant "telResReg: TeleportResourceRegistry" as resReg
participant "t1 : Teleport" as t1
participant "t2 : Teleport" as t2

[->s ++: craft(rcp)

s->rcp ++:craft(s)
    rcp->s ++:hasTeleport()
    return hasTeleport
    
    opt !hasTeleport
    
    rcp->resReg **: <<create>> TeleportResourceRegistry()
    rcp->s ++: getInventory()
    return inv
    
    rcp->resReg ++:register(inv)
    return
    rcp->resReg ++:isSuccessful()
    return haveEnoughMaterials
    
    opt haveEnoughMaterials == true
    
    loop for used material m in inv
        rcp ->inv ++:removeMaterial(m)
        return
    end
    
        rcp->t1 **:<<create>> Teleport(s)
        activate t1
            t1->s ++:acceptTeleport(t1)
            return true
            t1->t2 **:<<create>> Teleport(s, t1)
        deactivate t1
            activate t2
                t2->s ++:acceptTeleport(t2)
                return true
            deactivate t2
        
    end
    
    end
return craftingSuccessOrFail

return craftingSuccessOrFail